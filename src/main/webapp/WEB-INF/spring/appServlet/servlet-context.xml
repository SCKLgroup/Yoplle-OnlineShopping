<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	 <!-- <beans:bean id="database" class="org.apache.commons.dbcp.BasicDataSource"> 
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" /> 
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" /> 
		<beans:property name="username" value="c##apple"></beans:property> <beans:property 
		name="password" value="1234"></beans:property> </beans:bean>  -->

	 <beans:bean id="database"
		class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@market_high?TNS_ADMIN=C:\Users\eleck\Desktop\Wallet_market" />
		<beans:property name="username" value="admin"></beans:property>
		<beans:property name="password" value="Sistcom12345"></beans:property>
	</beans:bean>


	<beans:bean id="logds"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<beans:constructor-arg ref="database"></beans:constructor-arg>
		<beans:property name="logFormatter">
			<beans:bean
				class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<beans:property name="loggingType" value="MULTI_LINE"></beans:property>
				<beans:property name="sqlPrefix" value="SQL:"></beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="logds"></beans:bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*insert" propagation="REQUIRED" /><!-- 메소드를 
				진행할때 트랜잭션 필요할때 -->
			<!-- <tx:method name="*update" propagation="NEVER" />메소드를 진행할때 트랜잭션 필요없을때 -->
		</tx:attributes>
	</tx:advice>

<!-- 	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(public * sist.com.dao.*.*(..))" />
	</aop:config> -->

	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="logds" />
		<beans:property name="configLocation"
			value="/WEB-INF/Config.xml"></beans:property>
		<!-- <beans:property name="mapperLocations" value="/WEB-INF/mapper.xml"/> -->
	</beans:bean>

	<beans:bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg>
			<beans:ref bean="sqlSessionFactory" />
		</beans:constructor-arg>
	</beans:bean>


	<!-- <beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">multipart 인코딩을 한번에 도와줌
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
		<beans:property name="maxUploadSize" value="300000000"></beans:property>
	</beans:bean> -->

	<!-- 업로드 패스 설정 --> 
<beans:bean class="java.lang.String" id="uploadPath">
 <beans:constructor-arg value="

C:\Users\eleck\Spring\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\web\resources" />
</beans:bean>

<!-- 일반 파일 업로드 경로 -->
<resources mapping="/imgUpload/**" location="/resources/imgUpload/" />

<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
 <beans:property name="maxUploadSize" value="10485760"/>
</beans:bean>

	<aop:aspectj-autoproxy />
	<!-- 디스패처일때만 탈 수 있다 -->
	
	
	
	<context:component-scan
		base-package="yoplle.com.web" />

	<context:component-scan
		base-package="yoplle.service" />
	<context:component-scan
		base-package="yoplle.controller" />
	<context:component-scan
		base-package="yoplle.dao" />
	<context:component-scan
		base-package="yoplle.vo" />
	<context:component-scan
		base-package="yoplle.mapper" />
	<context:component-scan
		base-package="yoplle.notice.img" />
</beans:beans>